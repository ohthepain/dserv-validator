_storage {
  type = postgres
  config {
     dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
     properties = {
       serverName = ${?DB_SERVER}
       portNumber = ${?DB_PORT}
       databaseName = participant
       currentSchema = participant
       user =  ${?DB_USER}
       password = ${?DB_PASSWORD}
       tcpKeepAlive = true
     }
   }
   parameters {
     max-connections = 8
     migrate-and-start = true
   }
 }

canton {
  features {
    enable-preview-commands = yes
    enable-testing-commands = yes
  }
  parameters {
    manual-start = no
    non-standard-config = yes
  }
}

_participant {
  init {
    generate-topology-transactions-and-keys = false
    identity.type = manual
  }

  monitoring.grpc-health-server {
    address = "0.0.0.0"
    port = 5061
  }
  storage = ${_storage}

  admin-api {
    address = "0.0.0.0"
    port = 5002
  }

  init {
    ledger-api.max-deduplication-duration = 30s
  }

  ledger-api {
    address = "0.0.0.0"
    port = 5001
    user-management-service.additional-admin-user-id = ${?LEDGER_API_ADMIN_USER}
    auth-services = [{
      type = jwt-jwks
      url = ${?AUTH_JWKS_URL}
      target-audience = ${?AUTH_TARGET_AUDIENCE}
    }]
  }

  http-ledger-api.server {
    port = 7575
    address = 0.0.0.0
  }

  parameters {
    initial-protocol-version = 33
  }

  monitoring {
    http-health-server {
      address="0.0.0.0"
      port=7000
    }
  }
}

canton.participants.participant = ${_participant}
