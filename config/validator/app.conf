_storage {
  type = postgres
  config {
     dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
     properties = {
       serverName = ${?DB_SERVER}
       portNumber = ${?DB_PORT}
       databaseName = validator
       currentSchema = validator
       user =  ${?DB_USER}
       password = ${?DB_PASSWORD}
       tcpKeepAlive = true
     }
   }
   parameters {
     max-connections = 32
     migrate-and-start = true
   }
 }

_validator_backend {
  storage = ${_storage}
  admin-api = {
    address = "0.0.0.0"
    port = 5003
  }
  participant-client = {
    admin-api = {
      address = ${?SPLICE_APP_VALIDATOR_PARTICIPANT_ADDRESS}
      port = 5002
    }
    ledger-api = {
      client-config = {
        address = ${?SPLICE_APP_VALIDATOR_PARTICIPANT_ADDRESS}
        port = 5001
      }
      auth-config =  {
        type = "client-credentials"
        well-known-config-url = ${?SPLICE_APP_VALIDATOR_LEDGER_API_AUTH_URL}
        client-id = ${?SPLICE_APP_VALIDATOR_LEDGER_API_AUTH_CLIENT_ID}
        client-secret = ${?SPLICE_APP_VALIDATOR_LEDGER_API_AUTH_CLIENT_SECRET}
        audience = ${?SPLICE_APP_VALIDATOR_LEDGER_API_AUTH_AUDIENCE}
      }
    }
  }
  scan-client {
    type = "bft"
    seed-urls = []
    seed-urls.0 = ${?SPLICE_APP_VALIDATOR_SCAN_ADDRESS}
  }

  ledger-api-user = ${?LEDGER_API_ADMIN_USER}
  validator-wallet-users.0 = ${?WALLET_ADMIN_USER}
  validator-party-hint = ${?PARTY_HINT}
  auth {
    algorithm = "rs-256"
    audience = ${?SPLICE_APP_VALIDATOR_AUTH_AUDIENCE}
    jwks-url = ${?SPLICE_APP_VALIDATOR_AUTH_JWKS_URL}
  }
  app-instances {
  }
  onboarding = {
    sv-client.admin-api.url = ${?SPLICE_APP_VALIDATOR_SV_SPONSOR_ADDRESS}
    secret = ${?SPLICE_APP_VALIDATOR_ONBOARDING_SECRET}
  }
  domains {
    global {
      alias = "global"
    }
  }
  sv-validator = ${?SPLICE_APP_VALIDATOR_SV_VALIDATOR}
  sv-user = ${?SPLICE_APP_SV_LEDGER_API_AUTH_USER_NAME}
  contact-point = ""
  contact-point = ${?SPLICE_APP_CONTACT_POINT}
  canton-identifier-config = {
    participant = ${?PARTICIPANT_IDENTIFIER}
  }
}

canton.features.enable-testing-commands = yes

canton.validator-apps.validator_backend = ${_validator_backend}
